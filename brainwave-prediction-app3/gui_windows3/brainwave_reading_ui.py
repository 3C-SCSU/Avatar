from PyQt5 import QtCore, QtGui, QtWidgets


class BrainwaveReadingWidget(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1300, 850)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setStyleSheet("background-color: #64768e;\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setGeometry(QtCore.QRect(140, 200, 180, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_1.sizePolicy().hasHeightForWidth())
        self.label_1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_1.setFont(font)
        self.label_1.setStyleSheet("color: white;")
        self.label_1.setObjectName("label_1")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(140, 240, 361, 81))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tableWidget.setFont(font)
        self.tableWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.tableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(180)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.notWhatButton = QtWidgets.QPushButton(self.centralwidget)
        self.notWhatButton.setGeometry(QtCore.QRect(140, 340, 171, 71))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.notWhatButton.sizePolicy().hasHeightForWidth())
        self.notWhatButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.notWhatButton.setFont(font)
        self.notWhatButton.setStyleSheet("color: white;")
        self.notWhatButton.setObjectName("notWhatButton")
        self.readMyMindButton = QtWidgets.QPushButton(self.centralwidget)
        self.readMyMindButton.setGeometry(QtCore.QRect(250, 60, 131, 131))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.readMyMindButton.sizePolicy().hasHeightForWidth())
        self.readMyMindButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.readMyMindButton.setFont(font)
        self.readMyMindButton.setStyleSheet("background-color: transparent;\n"
"color: white;")
        self.readMyMindButton.setIconSize(QtCore.QSize(15, 15))
        self.readMyMindButton.setObjectName("readMyMindButton")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(130, 20, 371, 17))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ManualControlButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ManualControlButton.sizePolicy().hasHeightForWidth())
        self.ManualControlButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.ManualControlButton.setFont(font)
        self.ManualControlButton.setStyleSheet("color: white;")
        self.ManualControlButton.setChecked(True)
        self.ManualControlButton.setObjectName("ManualControlButton")
        self.horizontalLayout.addWidget(self.ManualControlButton)
        self.AutopilotButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AutopilotButton.sizePolicy().hasHeightForWidth())
        self.AutopilotButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.AutopilotButton.setFont(font)
        self.AutopilotButton.setStyleSheet("color: white;")
        self.AutopilotButton.setChecked(False)
        self.AutopilotButton.setObjectName("AutopilotButton")
        self.horizontalLayout.addWidget(self.AutopilotButton)
        self.readMyMindImage = QtWidgets.QLabel(self.centralwidget)
        self.readMyMindImage.setGeometry(QtCore.QRect(250, 60, 131, 131))
        self.readMyMindImage.setText("")
        self.readMyMindImage.setPixmap(QtGui.QPixmap("brainwave-prediction-app/images/brain.png"))
        self.readMyMindImage.setScaledContents(True)
        self.readMyMindImage.setObjectName("readMyMindImage")
        self.executeButton = QtWidgets.QPushButton(self.centralwidget)
        self.executeButton.setGeometry(QtCore.QRect(330, 340, 171, 71))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.executeButton.sizePolicy().hasHeightForWidth())
        self.executeButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.executeButton.setFont(font)
        self.executeButton.setStyleSheet("color: white;")
        self.executeButton.setObjectName("executeButton")
        self.predictionTable = QtWidgets.QTableWidget(self.centralwidget)
        self.predictionTable.setGeometry(QtCore.QRect(620, 20, 621, 451))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.predictionTable.setFont(font)
        self.predictionTable.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.predictionTable.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.predictionTable.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.predictionTable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.predictionTable.setColumnCount(3)
        self.predictionTable.setObjectName("predictionTable")
        self.predictionTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.predictionTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.predictionTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.predictionTable.setHorizontalHeaderItem(2, item)
        self.predictionTable.horizontalHeader().setVisible(True)
        self.predictionTable.horizontalHeader().setCascadingSectionResizes(False)
        self.predictionTable.horizontalHeader().setDefaultSectionSize(205)
        self.predictionTable.horizontalHeader().setHighlightSections(True)
        self.consoleLogLabel = QtWidgets.QLabel(self.centralwidget)
        self.consoleLogLabel.setGeometry(QtCore.QRect(870, 480, 201, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.consoleLogLabel.sizePolicy().hasHeightForWidth())
        self.consoleLogLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.consoleLogLabel.setFont(font)
        self.consoleLogLabel.setStyleSheet("color: white;")
        self.consoleLogLabel.setObjectName("consoleLogLabel")
        self.flightLogTable = QtWidgets.QTableWidget(self.centralwidget)
        self.flightLogTable.setGeometry(QtCore.QRect(140, 530, 361, 101))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.flightLogTable.setFont(font)
        self.flightLogTable.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.flightLogTable.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.flightLogTable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.flightLogTable.setColumnCount(0)
        self.flightLogTable.setObjectName("flightLogTable")
        self.flightLogTable.setRowCount(0)
        self.flightLogTable.horizontalHeader().setVisible(True)
        self.flightLogTable.horizontalHeader().setCascadingSectionResizes(False)
        self.flightLogTable.horizontalHeader().setDefaultSectionSize(120)
        self.flightLogTable.horizontalHeader().setHighlightSections(True)
        self.flightLogLabel = QtWidgets.QLabel(self.centralwidget)
        self.flightLogLabel.setGeometry(QtCore.QRect(140, 480, 180, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.flightLogLabel.setFont(font)
        self.flightLogLabel.setStyleSheet("color: white;")
        self.flightLogLabel.setObjectName("flightLogLabel")
        self.connectButton = QtWidgets.QPushButton(self.centralwidget)
        self.connectButton.setGeometry(QtCore.QRect(140, 660, 121, 101))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.connectButton.setFont(font)
        self.connectButton.setStyleSheet("background-color: transparent;\n"
"color: white;")
        self.connectButton.setObjectName("connectButton")
        self.connectButtonImage = QtWidgets.QLabel(self.centralwidget)
        self.connectButtonImage.setGeometry(QtCore.QRect(140, 660, 121, 101))
        self.connectButtonImage.setText("")
        self.connectButtonImage.setPixmap(QtGui.QPixmap("brainwave-prediction-app/images/connect.png"))
        self.connectButtonImage.setScaledContents(True)
        self.connectButtonImage.setObjectName("connectButtonImage")
        self.executeButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.executeButton_2.setGeometry(QtCore.QRect(330, 430, 171, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.executeButton_2.sizePolicy().hasHeightForWidth())
        self.executeButton_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.executeButton_2.setFont(font)
        self.executeButton_2.setStyleSheet("color: white;")
        self.executeButton_2.setObjectName("executeButton_2")
        self.flightLogTable_2 = QtWidgets.QTableWidget(self.centralwidget)
        self.flightLogTable_2.setGeometry(QtCore.QRect(870, 530, 361, 101))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.flightLogTable_2.setFont(font)
        self.flightLogTable_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.flightLogTable_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.flightLogTable_2.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.flightLogTable_2.setColumnCount(0)
        self.flightLogTable_2.setObjectName("flightLogTable_2")
        self.flightLogTable_2.setRowCount(0)
        self.flightLogTable_2.horizontalHeader().setVisible(True)
        self.flightLogTable_2.horizontalHeader().setCascadingSectionResizes(False)
        self.flightLogTable_2.horizontalHeader().setDefaultSectionSize(120)
        self.flightLogTable_2.horizontalHeader().setHighlightSections(True)
        self.connectButtonImage.raise_()
        self.readMyMindImage.raise_()
        self.label_1.raise_()
        self.tableWidget.raise_()
        self.notWhatButton.raise_()
        self.readMyMindButton.raise_()
        self.layoutWidget.raise_()
        self.executeButton.raise_()
        self.predictionTable.raise_()
        self.consoleLogLabel.raise_()
        self.flightLogTable.raise_()
        self.flightLogLabel.raise_()
        self.connectButton.raise_()
        self.executeButton_2.raise_()
        self.flightLogTable_2.raise_()
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_1.setText(_translate("MainWindow", "The model says ..."))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Count"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Label"))
        self.notWhatButton.setText(_translate("MainWindow", "Not what I was\n"
"thinking..."))
        self.readMyMindButton.setText(_translate("MainWindow", "Read my mind..."))
        self.ManualControlButton.setText(_translate("MainWindow", "Manual Control"))
        self.AutopilotButton.setText(_translate("MainWindow", "Autopilot"))
        self.executeButton.setText(_translate("MainWindow", "Execute"))
        item = self.predictionTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Predictions Count"))
        item = self.predictionTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Server Predictions"))
        item = self.predictionTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Prediction Label"))
        self.consoleLogLabel.setText(_translate("MainWindow", "Console Log"))
        self.flightLogLabel.setText(_translate("MainWindow", "Flight Log"))
        self.connectButton.setText(_translate("MainWindow", "Connect"))
        self.executeButton_2.setText(_translate("MainWindow", "Keep drone alive"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
